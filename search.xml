<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>周练19.11.24</title>
      <link href="/Ning-Hui.github.io/3/"/>
      <url>/Ning-Hui.github.io/3/</url>
      
        <content type="html"><![CDATA[<p>积薄而为厚，积少而为多。<a id="more"></a></p><h1 id="CodeForces-1180A"><a href="#CodeForces-1180A" class="headerlink" title="CodeForces - 1180A "></a><a href="https://vjudge.net/problem/2502036/origin" target="_blank" rel="noopener">CodeForces - 1180A </a></h1><p>While playing with geometric figures Alex has accidentally invented a concept of a nn-th order rhombus in a cell grid.</p><p>A 11-st order rhombus is just a square 1×11×1 (i.e just a cell).</p><p>A nn-th order rhombus for all n≥2n≥2 one obtains from a n−1n−1-th order rhombus adding all cells which have a common side with it to it (look at the picture to understand it better).</p><p><img src="/Ning-Hui.github.io/" class="lazyload" data-src="https://vj.z180.cn/aafbf394244011b7c56157b1a3da02d7?v=1574585563"  alt="img"></p><p>Alex asks you to compute the number of cells in a nn-th order rhombus.</p><p><strong>Input</strong></p><p>The first and only input line contains integer nn (1≤n≤1001≤n≤100) — order of a rhombus whose numbers of cells should be computed.</p><p><strong>Output</strong></p><p>Print exactly one integer — the number of cells in a nn-th order rhombus.</p><p><strong>Examples</strong></p><p><strong>Input</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>Input</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>Input</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure><p><strong>Note</strong></p><p>Images of rhombus corresponding to the examples are given in the statement.</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line">ll num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">&#123;</span><br><span class="line">num = <span class="number">2</span>*(n<span class="number">-1</span>)*(n<span class="number">-1</span>)+<span class="number">2</span>*n<span class="number">-1</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="CodeForces-1180B"><a href="#CodeForces-1180B" class="headerlink" title="CodeForces - 1180B"></a><a href="https://vjudge.net/problem/2502037/origin" target="_blank" rel="noopener">CodeForces - 1180B</a></h1><p>Nick had received an awesome array of integers a=[a1,a2,…,an]a=[a1,a2,…,an] as a gift for his 55 birthday from his mother. He was already going to explore its various properties but after unpacking he was disappointed a lot because the product a1⋅a2⋅…ana1⋅a2⋅…an of its elements seemed to him not large enough.</p><p>He was ready to throw out the array, but his mother reassured him. She told him, that array would not be spoiled after the following operation: choose any index ii (1≤i≤n1≤i≤n) and do ai:=−ai−1ai:=−ai−1.</p><p>For example, he can change array [3,−1,−4,1][3,−1,−4,1] to an array [−4,−1,3,1][−4,−1,3,1] after applying this operation to elements with indices i=1i=1 and i=3i=3.</p><p>Kolya had immediately understood that sometimes it’s possible to increase the product of integers of the array a lot. Now he has decided that he wants to get an array with the maximal possible product of integers using only this operation with its elements (possibly zero, one or more times, as many as he wants), it is not forbidden to do this operation several times for the same index.</p><p>Help Kolya and print the array with the maximal possible product of elements a1⋅a2⋅…ana1⋅a2⋅…an which can be received using only this operation in some order.</p><p>If there are multiple answers, print any of them.</p><p>Input</p><p>The first line contains integer nn (1≤n≤1051≤n≤105) — number of integers in the array.</p><p>The second line contains nn integers a1,a2,…,ana1,a2,…,an (−106≤ai≤106−106≤ai≤106) — elements of the array</p><p>Output</p><p>Print nn numbers — elements of the array with the maximal possible product of elements which can be received using only this operation in some order from the given array.</p><p>If there are multiple answers, print any of them.</p><p>Examples</p><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">2 2 2 2</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-3 -3 -3 -3</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">-3 -3 2</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-3 -3 2</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line">ll a[<span class="number">200000</span>],b[<span class="number">200000</span>];</span><br><span class="line">ll Max1,Max2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">&#123;</span><br><span class="line">ll Min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;=<span class="number">0</span>)</span><br><span class="line">a[i] = -a[i] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;<span class="number">0</span>)</span><br><span class="line">Min= <span class="built_in">min</span>(a[i],Min);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==Min)</span><br><span class="line">&#123;a[i] = -a[i] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CodeForces-1169B"><a href="#CodeForces-1169B" class="headerlink" title="CodeForces - 1169B"></a><a href="https://vjudge.net/problem/2465025/origin" target="_blank" rel="noopener">CodeForces - 1169B</a></h1><p>Toad Ivan has mm pairs of integers, each integer is between 11 and nn, inclusive. The pairs are (a1,b1),(a2,b2),…,(am,bm)(a1,b1),(a2,b2),…,(am,bm).</p><p>He asks you to check if there exist two integers xx and yy (1≤x&lt;y≤n1≤x&lt;y≤n) such that in each given pair at least one integer is equal to xx or yy.</p><p>Input</p><p>The first line contains two space-separated integers nn and mm (2≤n≤3000002≤n≤300000, 1≤m≤3000001≤m≤300000) — the upper bound on the values of integers in the pairs, and the number of given pairs.</p><p>The next mm lines contain two integers each, the ii-th of them contains two space-separated integers aiaiand bibi (1≤ai,bi≤n,ai≠bi1≤ai,bi≤n,ai≠bi) — the integers in the ii-th pair.</p><p>Output</p><p>Output “YES” if there exist two integers xx and yy (1≤x&lt;y≤n1≤x&lt;y≤n) such that in each given pair at least one integer is equal to xx or yy. Otherwise, print “NO”. You can print each letter in any case (upper or lower).</p><p>Examples</p><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 6</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br><span class="line">2 3</span><br><span class="line">2 4</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 4</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">3 4</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">300000 5</span><br><span class="line">1 2</span><br><span class="line">1 2</span><br><span class="line">1 2</span><br><span class="line">1 2</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>Note</p><p>In the first example, you can’t choose any xx, yy because for each such pair you can find a given pair where both numbers are different from chosen integers.</p><p>In the second example, you can choose x=2x=2 and y=4y=4.</p><p>In the third example, you can choose x=1x=1 and y=2y=2.</p><p>The circle line of the Roflanpolis subway has nn stations.</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,m;</span><br><span class="line">ll a[<span class="number">400000</span>],b1[<span class="number">400000</span>],b2[<span class="number">400000</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll x,y;</span><br><span class="line">&#125;mm[<span class="number">300006</span>];</span><br><span class="line">ll con,num,flag;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;mm[i].x&gt;&gt;mm[i].y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">2</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mm[i].x!=mm[<span class="number">1</span>].x&amp;&amp;mm[i].y!=mm[<span class="number">1</span>].x)</span><br><span class="line">&#123;</span><br><span class="line">a[num++] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;num;++i)</span><br><span class="line">&#123;</span><br><span class="line">b1[mm[a[i]].x]++;</span><br><span class="line">b1[mm[a[i]].y]++;</span><br><span class="line"><span class="keyword">if</span>(b1[mm[a[i]].x] == num||b1[mm[a[i]].y]==num)</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num ==<span class="number">0</span>) </span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">2</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mm[i].x!=mm[<span class="number">1</span>].y&amp;&amp;mm[i].y!=mm[<span class="number">1</span>].y)</span><br><span class="line">&#123;</span><br><span class="line">a[num++] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;num;++i)</span><br><span class="line">&#123;</span><br><span class="line">b2[mm[a[i]].x]++;</span><br><span class="line">b2[mm[a[i]].y]++;</span><br><span class="line"><span class="keyword">if</span>(b2[mm[a[i]].x] == num||b2[mm[a[i]].y]==num)</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num == <span class="number">0</span>)</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CodeForces-1169A"><a href="#CodeForces-1169A" class="headerlink" title="CodeForces - 1169A "></a><a href="https://vjudge.net/problem/2465024/origin" target="_blank" rel="noopener">CodeForces - 1169A </a></h1><p>There are two parallel routes in the subway. The first one visits stations in order 1→2→…→n→1→2→…1→2→…→n→1→2→… (so the next stop after station xx is equal to (x+1)(x+1) if x&lt;nx&lt;n and 11otherwise). The second route visits stations in order n→(n−1)→…→1→n→(n−1)→…n→(n−1)→…→1→n→(n−1)→…(so the next stop after station xx is equal to (x−1)(x−1) if x&gt;1x&gt;1 and nn otherwise). All trains depart their stations simultaneously, and it takes exactly 11 minute to arrive at the next station.</p><p>Two toads live in this city, their names are Daniel and Vlad.</p><p>Daniel is currently in a train of the first route at station aa and will exit the subway when his train reaches station xx.</p><p>Coincidentally, Vlad is currently in a train of the second route at station bb and he will exit the subway when his train reaches station yy.</p><p>Surprisingly, all numbers a,x,b,ya,x,b,y are distinct.</p><p>Toad Ilya asks you to check if Daniel and Vlad will ever be at the same station at the same time during their journey. In other words, check if there is a moment when their trains stop at the same station. Note that this includes the moments when Daniel or Vlad enter or leave the subway.</p><p>Input</p><p>The first line contains five space-separated integers nn, aa, xx, bb, yy (4≤n≤1004≤n≤100, 1≤a,x,b,y≤n1≤a,x,b,y≤n, all numbers among aa, xx, bb, yy are distinct) — the number of stations in Roflanpolis, Daniel’s start station, Daniel’s finish station, Vlad’s start station and Vlad’s finish station, respectively.</p><p>Output</p><p>Output “YES” if there is a time moment when Vlad and Daniel are at the same station, and “NO” otherwise. You can print each letter in any case (upper or lower).</p><p>Examples</p><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 1 4 3 2</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 2 1 9 10</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><p>Note</p><p>In the first example, Daniel and Vlad start at the stations (1,3)(1,3). One minute later they are at stations (2,2)(2,2). They are at the same station at this moment. Note that Vlad leaves the subway right after that.</p><p>Consider the second example, let’s look at the stations Vlad and Daniel are at. They are:</p><ul><li>initially (2,9)(2,9),</li><li>after 11 minute (3,8)(3,8),</li><li>after 22 minutes (4,7)(4,7),</li><li>after 33 minutes (5,6)(5,6),</li><li>after 44 minutes (6,5)(6,5),</li><li>after 55 minutes (7,4)(7,4),</li><li>after 66 minutes (8,3)(8,3),</li><li>after 77 minutes (9,2)(9,2),</li><li>after 88 minutes (10,1)(10,1),</li><li>after 99 minutes (1,10)(1,10).</li></ul><p>After that, they both leave the subway because they are at their finish stations, so there is no moment when they both are at the same station.</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll aa[<span class="number">105</span>];</span><br><span class="line">ll n;</span><br><span class="line">ll a,x,b,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;x&gt;&gt;b&gt;&gt;y;</span><br><span class="line"><span class="keyword">for</span>(ll i =a,j = b;;i++,j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;n) i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">0</span>) j=n;</span><br><span class="line"><span class="keyword">if</span>(i==j)</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i==x||j==y)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周练19.11.17</title>
      <link href="/Ning-Hui.github.io/2/"/>
      <url>/Ning-Hui.github.io/2/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="B-Consecutive-Integers"><a href="#B-Consecutive-Integers" class="headerlink" title="B - Consecutive Integers"></a>B - Consecutive Integers</h1><p><strong>Problem Statement</strong></p><p>Snuke has <em>N</em> integers: 1,2,[ldots],<em>N</em>. He will choose <em>K</em> of them and give those to Takahashi.</p><p>How many ways are there to choose <em>K</em> consecutive integers?</p><p><strong>Constraints</strong></p><ul><li>All values in input are integers.</li><li>1≤<em>K</em>≤<em>N</em>≤50</li></ul><p><strong>Input</strong></p><p>Input is given from Standard Input in the following format:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N K</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><p>Print the answer.</p><p><strong>Sample Input 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure><p><strong>Sample Output 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>There are two ways to choose two consecutive integers: (1,2) and (2,3).</p><p><strong>Sample Input 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13 3</span><br></pre></td></tr></table></figure><p><strong>Sample Output 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><p><strong>AC</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(n-k)+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-ModSum"><a href="#C-ModSum" class="headerlink" title="C - ModSum"></a>C - ModSum</h1><p> <strong>Problem Statement</strong></p><p>For an integer <em>N</em>, we will choose a permutation {<em>P</em>1,<em>P</em>2,…,<em>P**N</em>} of {1,2,…,<em>N</em>}.</p><p>Then, for each <em>i</em>=1,2,…,<em>N</em>, let <em>M**i</em> be the remainder when <em>i</em> is divided by <em>P**i</em>.</p><p>Find the maximum possible value of <em>M</em>1+<em>M</em>2+[cdots]+<em>M**N</em>.</p><p><strong>Constraints</strong></p><ul><li><em>N</em> is an integer satisfying 1≤<em>N</em>≤109.</li></ul><p><strong>Input</strong></p><p>Input is given from Standard Input in the following format:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><p>Print the maximum possible value of <em>M</em>1+<em>M</em>2+[cdots]+<em>M**N</em>.</p><p><strong>Sample Input 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>Sample Output 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>When the permutation {<em>P</em>1,<em>P</em>2}={2,1} is chosen, <em>M</em>1+<em>M</em>2=1+0=1.</p><p><strong>Sample Input 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure><p><strong>Sample Output 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">78</span><br></pre></td></tr></table></figure><p><strong>Sample Input 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>Sample Output 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>AC</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> sum = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">  sum+=i;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="F-Monsters-Battle-Royale"><a href="#F-Monsters-Battle-Royale" class="headerlink" title="F - Monsters Battle Royale"></a>F - Monsters Battle Royale</h1><p><strong>Problem Statement</strong></p><p>There are <em>N</em> monsters, numbered 1,2,…,<em>N</em>.</p><p>Initially, the health of Monster <em>i</em> is <em>A**i</em>.</p><p>Below, a monster with at least 1 health is called alive.</p><p>Until there is only one alive monster, the following is repeated:</p><ul><li>A random alive monster attacks another random alive monster.</li><li>As a result, the health of the monster attacked is reduced by the amount equal to the current health of the monster attacking.</li></ul><p>Find the minimum possible final health of the last monster alive.</p><p><strong>Constraints</strong></p><ul><li>All values in input are integers.</li><li>2≤<em>N</em>≤105</li><li>1≤<em>A*</em>i*≤109</li></ul><p><strong>Input</strong></p><p>Input is given from Standard Input in the following format:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N</span><br><span class="line">A1 A2 … AN</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><p>Print the minimum possible final health of the last monster alive.</p><p><strong>Sample Input 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">2 10 8 40</span><br></pre></td></tr></table></figure><p><strong>Sample Output 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>When only the first monster keeps on attacking, the final health of the last monster will be 2, which is minimum.</p><p><strong>Sample Input 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">5 13 8 1000000000</span><br></pre></td></tr></table></figure><p><strong>Sample Output 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>Sample Input 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1000000000 1000000000 1000000000</span><br></pre></td></tr></table></figure><p><strong>Sample Output 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1000000000</span><br></pre></td></tr></table></figure><p><strong>AC</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[(<span class="keyword">int</span>)<span class="number">1e5</span> + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) </span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">begin</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        sort(a + <span class="built_in">begin</span>, a + n);</span><br><span class="line">        <span class="keyword">while</span> (a[<span class="built_in">begin</span>] == <span class="number">0</span>) <span class="built_in">begin</span>++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">begin</span> == n - <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">begin</span> + <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            a[i] %= a[<span class="built_in">begin</span>];</span><br><span class="line">            <span class="keyword">if</span> (a[i] == <span class="number">1</span>) &#123;</span><br><span class="line">                ans = <span class="number">1</span>;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag)</span><br><span class="line">    ans = a[n<span class="number">-1</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="G-Powerful-Discount-Tickets"><a href="#G-Powerful-Discount-Tickets" class="headerlink" title="G - Powerful Discount Tickets"></a>G - Powerful Discount Tickets</h1><p><strong>Problem Statement</strong></p><p>Takahashi is going to buy <em>N</em> items one by one.</p><p>The price of the <em>i</em>-th item he buys is <em>A**i</em> yen (the currency of Japan).</p><p>He has <em>M</em> discount tickets, and he can use any number of them when buying an item.</p><p>If <em>Y</em> tickets are used when buying an item priced <em>X</em> yen, he can get the item for X/2^Y </p><p>(rounded down to the nearest integer) yen</p><p>What is the minimum amount of money required to buy all the items?</p><p><strong>Constraints</strong></p><ul><li>All values in input are integers.</li><li>1≤<em>N</em>,<em>M</em>≤105</li><li>1≤<em>A*</em>i*≤109</li></ul><p><strong>Input</strong></p><p>Input is given from Standard Input in the following format:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N M</span><br><span class="line">A1 A2 … AN</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><p>Print the minimum amount of money required to buy all the items.</p><p><strong>Sample Input 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">2 13 8</span><br></pre></td></tr></table></figure><p><strong>Sample Output 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><p>We can buy all the items for 9 yen, as follows:</p><ul><li>Buy the 1-st item for 2 yen without tickets.</li><li>Buy the 2-nd item for 3 yen with 2 tickets.</li><li>Buy the 3-rd item for 4 yen with 1 ticket.</li></ul><p><strong>Sample Input 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">1 9 3 5</span><br></pre></td></tr></table></figure><p><strong>Sample Output 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><p><strong>Sample Input 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 100000</span><br><span class="line">1000000000</span><br></pre></td></tr></table></figure><p><strong>Sample Output 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>We can buy the item priced 1000000000 yen for 0 yen with 100000 tickets.</p><p><strong>Sample Input 4</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 1</span><br><span class="line">1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000</span><br></pre></td></tr></table></figure><p><strong>Sample Output 4</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9500000000</span><br></pre></td></tr></table></figure><p><strong>AC</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m,n;  </span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">&#123; </span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">q.push(t);    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(m)</span><br><span class="line">&#123;</span><br><span class="line">t=q.top()/<span class="number">2</span>;</span><br><span class="line">q.pop();</span><br><span class="line">q.push(t);</span><br><span class="line">m--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">sum+=q.top();</span><br><span class="line">q.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-Lower"><a href="#I-Lower" class="headerlink" title="I - Lower"></a>I - Lower</h1><p><strong>Problem Statement</strong></p><p>There are <em>N</em> squares arranged in a row from left to right.</p><p>The height of the <em>i</em>-th square from the left is <em>H**i</em>.</p><p>You will land on a square of your choice, then repeat moving to the adjacent square <strong>on the right</strong> as long as the height of the next square is not greater than that of the current square.</p><p>Find the maximum number of times you can move.</p><p><strong>Constraints</strong></p><ul><li>All values in input are integers.</li><li>1≤<em>N</em>≤105</li><li>1≤<em>H*</em>i*≤109</li></ul><p><strong>Input</strong></p><p>Input is given from Standard Input in the following format:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N</span><br><span class="line">H1 H2 … HN</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><p>Print the maximum number of times you can move.</p><p><strong>Sample Input 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">10 4 8 7 3</span><br></pre></td></tr></table></figure><p><strong>Sample Output 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>By landing on the third square from the left, you can move to the right twice.</p><p><strong>Sample Input 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">4 4 5 6 6 5 5</span><br></pre></td></tr></table></figure><p><strong>Sample Output 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>By landing on the fourth square from the left, you can move to the right three times.</p><p><strong>Sample Input 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3 4</span><br></pre></td></tr></table></figure><p><strong>Sample Output 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>AC</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000009</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> con=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k = a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">2</span>;i&lt;=t;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k&gt;=a[i])</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">k=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k&lt;a[i])</span><br><span class="line">&#123;</span><br><span class="line">con = <span class="built_in">max</span>(num,con);</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line">k = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">con = <span class="built_in">max</span>(con,num);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;con&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="M-AB-Substrings"><a href="#M-AB-Substrings" class="headerlink" title="M - AB Substrings"></a>M - AB Substrings</h1><p><strong>Problem Statement</strong></p><p>Snuke has <em>N</em> strings. The <em>i</em>-th string is <em>s**i</em>.</p><p>Let us concatenate these strings into one string after arranging them in some order. Find the maximum possible number of occurrences of <code>AB</code> in the resulting string.</p><p><strong>Constraints</strong></p><ul><li>1≤<em>N</em>≤104</li><li>2≤|<em>s**i</em>|≤10</li><li><em>s**i</em> consists of uppercase English letters.</li></ul><p><strong>Input</strong></p><p>Input is given from Standard Input in the following format:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N</span><br><span class="line">s1</span><br><span class="line">\vdots</span><br><span class="line">s_N</span><br></pre></td></tr></table></figure><p><strong>Output</strong></p><p>Print the answer.</p><p><strong>Sample Input 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">ABCA</span><br><span class="line">XBAZ</span><br><span class="line">BAD</span><br></pre></td></tr></table></figure><p><strong>Sample Output 1</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>For example, if we concatenate <code>ABCA</code>, <code>BAD</code> and <code>XBAZ</code> in this order, the resulting string <code>ABCABADXBAZ</code> has two occurrences of <code>AB</code>.</p><p><strong>Sample Input 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">BEWPVCRWH</span><br><span class="line">ZZNQYIJX</span><br><span class="line">BAVREA</span><br><span class="line">PA</span><br><span class="line">HJMYITEOX</span><br><span class="line">BCJHMRMNK</span><br><span class="line">BP</span><br><span class="line">QVFABZ</span><br><span class="line">PRGKSPUNA</span><br></pre></td></tr></table></figure><p><strong>Sample Output 2</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>Sample Input 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">RABYBBE</span><br><span class="line">JOZ</span><br><span class="line">BMHQUVA</span><br><span class="line">BPA</span><br><span class="line">ISU</span><br><span class="line">MCMABAOBHZ</span><br><span class="line">SZMEHMA</span><br></pre></td></tr></table></figure><p><strong>Sample Output 3</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>AC</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>,mid=<span class="number">0</span>,con=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;a);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="string">'B'</span>&amp;&amp;a[len<span class="number">-1</span>]==<span class="string">'A'</span>)</span><br><span class="line">con++;</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="string">'B'</span>&amp;&amp;a[len<span class="number">-1</span>]!=<span class="string">'A'</span>)</span><br><span class="line">head++;</span><br><span class="line"><span class="keyword">if</span>(a[len<span class="number">-1</span>]==<span class="string">'A'</span>&amp;&amp;a[<span class="number">0</span>]!=<span class="string">'B'</span>)</span><br><span class="line">tail++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">1</span>;j&lt;len<span class="number">-1</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==<span class="string">'B'</span>&amp;&amp;a[j<span class="number">-1</span>]==<span class="string">'A'</span>)</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> h=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(con)</span><br><span class="line">&#123;</span><br><span class="line">ans = ans+con<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(head)</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(tail)</span><br><span class="line">h = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">head = head+h;</span><br><span class="line">tail = tail+t;</span><br><span class="line"></span><br><span class="line">ans = ans+<span class="built_in">min</span>(head,tail);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周练19.11.03/10</title>
      <link href="/Ning-Hui.github.io/1/"/>
      <url>/Ning-Hui.github.io/1/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="POJ3984"><a href="#POJ3984" class="headerlink" title="POJ3984"></a><a href="http://poj.org/problem?id=3984" target="_blank" rel="noopener">POJ3984</a></h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>定义一个二维数组：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int maze[5][5] &#x3D; &#123;</span><br><span class="line"></span><br><span class="line">0, 1, 0, 0, 0,</span><br><span class="line"></span><br><span class="line">0, 1, 0, 1, 0,</span><br><span class="line"></span><br><span class="line">0, 0, 0, 0, 0,</span><br><span class="line"></span><br><span class="line">0, 1, 1, 1, 0,</span><br><span class="line"></span><br><span class="line">0, 0, 0, 1, 0,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>它表示一个迷宫，其中的1表示墙壁，0表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。</p><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>一个5 × 5的二维数组，表示一个迷宫。数据保证有唯一解。</p><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>左上角到右下角的最短路径，格式如样例所示。</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 1 0 0 0</span><br><span class="line">0 1 0 1 0</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 1 1 1 0</span><br><span class="line">0 0 0 1 0</span><br></pre></td></tr></table></figure><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(0, 0)</span><br><span class="line">(1, 0)</span><br><span class="line">(2, 0)</span><br><span class="line">(2, 1)</span><br><span class="line">(2, 2)</span><br><span class="line">(2, 3)</span><br><span class="line">(2, 4)</span><br><span class="line">(3, 4)</span><br><span class="line">(4, 4)</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">4</span>][<span class="number">2</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">&#125;now,nt,path[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">0</span>&amp;&amp;y==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"(0, 0)"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    show(path[x][y].x,path[x][y].y);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; x &lt;&lt; <span class="string">", "</span> &lt;&lt; y &lt;&lt; <span class="string">")"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">1</span>,<span class="keyword">sizeof</span>(mp));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">0</span>;j&lt;<span class="number">5</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;mp[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//BFS</span></span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line">now.x = <span class="number">0</span>;</span><br><span class="line">now.y = <span class="number">0</span>;</span><br><span class="line">q.push(now);</span><br><span class="line">mp[now.x][now.y] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">now = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(now.x==<span class="number">4</span>&amp;&amp;now.y==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line">nt.x = now.x+d[i][<span class="number">0</span>];</span><br><span class="line">nt.y = now.y+d[i][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(nt.x&gt;=<span class="number">0</span> &amp;&amp; nt.y&gt;=<span class="number">0</span> &amp;&amp; nt.x&lt;<span class="number">5</span> &amp;&amp; nt.y&lt;<span class="number">5</span> &amp;&amp;mp[nt.x][nt.y]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">mp[nt.x][nt.y]=<span class="number">1</span>;</span><br><span class="line">path[nt.x][nt.y].x = now.x;</span><br><span class="line">path[nt.x][nt.y].y = now.y;</span><br><span class="line">q.push(nt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="comment">//</span></span><br></pre></td></tr></table></figure><h1 id="CodeForce"><a href="#CodeForce" class="headerlink" title="CodeForce"></a><a href="http://codeforces.com/gym/102394/problem/F" target="_blank" rel="noopener">CodeForce</a></h1><p>Harbin, whose name was originally a Manchu word meaning “a place for drying fishing nets”, grew from a small rural settlement on the Songhua River to become one of the largest cities in Northeast China. Founded in 1898 with the coming of the Chinese Eastern Railway, the city first prospered as a region inhabited by an overwhelming majority of the immigrants from the Russian Empire. Now, Harbin is the capital of Heilongjiang province and the largest city in the northeastern region of the People’s Republic of China. It serves as a key political, economic, scientific, cultural, and communications hub in Northeast China, as well as an important industrial base of the nation.</p><p>This year, a CCPC regional contest is going to be held in this wonderful city, hosted by Northeast Forestry University. To ensure the contest will be a success and enjoyed by programmers around the country, preparations for the event are well underway months before the contest.</p><p>You are the leader of a student volunteer group in charge of making banners to decorate the campus during the event. Unfortunately, your group made a mistake and misprinted one of the banners. To be precise, the word “harbin” is missing in that banner. Because you don’t have time to reprint it, the only way to fix it is to cut letters from some used old banners and paste them onto the misprinted banner. You have exactly six banners, and for some reason, you must cut exactly one letter from each banner. Then, you can arrange and paste the six letters onto the misprinted banner and try to make the missing word “harbin”. However, before you start cutting, you decide to write a program to see if this is possible at all.</p><h2 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h2><p>The input contains multiple cases. The first line of the input contains a single integer T (1≤T≤50000)T (1≤T≤50000), the number of cases.</p><p>For each case, the input contains six lines. Each line contains a non-empty string consisting only of lowercase English letters, describing the letters on one of the old banners.</p><p>The total length of all strings in all cases doesn’t exceed 2⋅1062⋅106.</p><h2 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h2><p>For each case, print the string “Yes” (without quotes) if it is possible to make the word “harbin”, otherwise print the string “No” (without quotes).</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><h2 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">welcome</span><br><span class="line">toparticipate</span><br><span class="line">inthe</span><br><span class="line">ccpccontest</span><br><span class="line">inharbin</span><br><span class="line">inoctober</span><br><span class="line">harvest</span><br><span class="line">belong</span><br><span class="line">ninja</span><br><span class="line">reset</span><br><span class="line">amazing</span><br><span class="line">intriguing</span><br></pre></td></tr></table></figure><h2 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><p>这道题比较简单，一开始用dfs搜图没搜出来，看了学长的代码，使用全排列写的，记录一下。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,mp[<span class="number">6</span>][<span class="number">30</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="keyword">sizeof</span> mp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> st[maxn];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,st);</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(st);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)</span><br><span class="line">mp[i][st[j]-<span class="string">'a'</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>]=&#123;<span class="string">"abhinr"</span>&#125;;<span class="comment">//一定得字典序最小,不然有些情况便利不到 </span></span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(!mp[i][s[i]-<span class="string">'a'</span>])</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(next_permutation(s,s+<span class="number">6</span>));</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="HDU6575"><a href="#HDU6575" class="headerlink" title="HDU6575"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6575" target="_blank" rel="noopener">HDU6575</a></h1><p>Avin’s company has many ongoing projects with different budgets. His company records the budgets using numbers rounded to 3 digits after the decimal place. However, the company is updating the system and all budgets will be rounded to 2 digits after the decimal place. For example, 1.004 will be rounded down<br>to 1.00 while 1.995 will be rounded up to 2.00. Avin wants to know the difference of the total budget caused by the update.</p><h2 id="Input-3"><a href="#Input-3" class="headerlink" title="Input"></a>Input</h2><p>The first line contains an integer n (1 ≤ n ≤ 1, 000). The second line contains n decimals, and the i-th decimal ai (0 ≤ ai ≤ 1e18) represents the budget of the i -th project. All decimals are rounded to 3 digits.</p><h2 id="Output-3"><a href="#Output-3" class="headerlink" title="Output"></a>Output</h2><p>Print the difference rounded to 3 digits..</p><h2 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1.001</span><br><span class="line">1</span><br><span class="line">0.999</span><br><span class="line">2</span><br><span class="line">1.001 0.999</span><br></pre></td></tr></table></figure><h2 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-0.001</span><br><span class="line">0.001</span><br><span class="line">0.000</span><br></pre></td></tr></table></figure><p>自我感觉这道题太坑了，一开始用double，不行，换成float，WA，最后竟然要用字符串来做，傻眼了。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx=<span class="number">1e3</span>+<span class="number">100</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> ans=<span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">len=s.length();</span><br><span class="line">             <span class="keyword">int</span> x = s[len<span class="number">-1</span>] - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x&gt;=<span class="number">5</span>&amp;&amp;x&lt;=<span class="number">9</span>) ans+=<span class="number">0.001</span>*(<span class="number">10</span>-x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x&lt;<span class="number">5</span>&amp;&amp;x&gt;<span class="number">0</span>) ans-=<span class="number">0.001</span>*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="HDU6573"><a href="#HDU6573" class="headerlink" title="HDU6573"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6573" target="_blank" rel="noopener">HDU6573</a></h1><p>Avin is observing the cars at a crossroads. He finds that there are n cars running in the east-west direction with the i-th car passing the intersection at time ai . There are another m cars running in the north-south direction with the i-th car passing the intersection at time bi . If two cars passing the intersections at the same time, a traffic crash occurs. In order to achieve world peace and harmony, all the cars running in the north-south direction wait the same amount of integral time so that no two cars bump. You are asked the minimum waiting time.</p><h2 id="Input-4"><a href="#Input-4" class="headerlink" title="Input"></a>Input</h2><p>The first line contains two integers n and m (1 ≤ n, m ≤ 1, 000). The second line contains n distinct integers ai (1 ≤ ai ≤ 1, 000). The third line contains m distinct integers bi (1 ≤ bi ≤ 1, 000).</p><h2 id="Output-4"><a href="#Output-4" class="headerlink" title="Output"></a>Output</h2><p>Print a non-negative integer denoting the minimum waiting time.</p><h2 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1 2</span><br><span class="line">2</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><h2 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>这道题不难，但是读懂题很重要。</p><p>我语文是体育老师教的哈哈~</p><p>模拟一下就可以了</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxx=<span class="number">5e3</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">bool</span> vis1[maxx];</span><br><span class="line"><span class="keyword">bool</span> vis2[maxx];</span><br><span class="line"><span class="keyword">int</span> a[maxx];</span><br><span class="line"><span class="keyword">int</span> b[maxx];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis1,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis1));</span><br><span class="line"><span class="built_in">memset</span>(vis2,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis2));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]),vis1[a[i]]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;=<span class="number">3008</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis2,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis2));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">vis2[b[i]+t]=<span class="number">1</span>;<span class="comment">//对南北方向进行标记</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t+<span class="number">100</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(vis1[i]&amp;&amp;vis2[i])<span class="comment">//如何南北方向和东西方向同时有车通过，相撞</span></span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
